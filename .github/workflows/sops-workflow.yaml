name: Inject secrets to Vault via Sops

on:
  workflow_run:
    workflows: ["Gitleaks Workflow"]
    branches: [main,gh-action/workflow/INF-9277]
    types:
      - completed
      - requested
  # push:
  #   branches:
  #     - "main"
  #     - "gh-action/workflow/INF-9277"
    # paths:
    #   - "secrets/**"
  # workflow_dispatch:
# pull_request:
  #   branches: [ "main" ]

jobs:

  pre_job:
    runs-on: self-hosted
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          skip_after_successful_duplicate: 'true'

  # gitleaks:
  #   needs: [pre_job]
  #   runs-on: self-hosted
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v3.8.1
  #       with:
  #         node-version: 18
  #         check-latest: true
  #     - name: Running secret scanner
  #       uses: ./.github/workflows/gitleaks-workflow.yaml

  # reviewdog:
  #   runs-on: self-hosted
  #   needs: [pre_job,reviewdog]
  #   steps:
  #     - name: Running secret scanner
  #       uses: ./.github/workflows/reviewdog-workflow.yaml

  publish_secret_vault:
    needs: [pre_job]
    strategy:
      matrix:
        environment:
          - sandbox
          - staging
          - production
    if: |
      ${{ needs.pre_job.outputs.should_skip != 'true' }}
      # github.event_name == 'pull_request'

    runs-on: self-hosted-${{ matrix.environment }}
    timeout-minutes: 5 # Set the runner timeout to 5 minutes

    environment: ${{ matrix.environment }} #no longer required

    # this line will transfer all secrets to the main workflow
    name: sops
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment variables for ${{ matrix.environment }} environment
        run: |
          case ${{ matrix.environment }} in
            sandbox)
              VAULT_ADDR="${{ secrets.SANDBOX_VAULT_ADDR }}"
              VAULT_TOKEN="${{ secrets.SANDBOX_VAULT_TOKEN }}"
              ;;
            staging)
              VAULT_ADDR="${{ secrets.STAGING_VAULT_ADDR }}"
              VAULT_TOKEN="${{ secrets.STAGING_VAULT_TOKEN }}"
              ;;
            production)
              VAULT_ADDR="${{ secrets.PRODUCTION_VAULT_ADDR }}"
              VAULT_TOKEN="${{ secrets.PRODUCTION_VAULT_TOKEN }}"
              ;;
            *)
              echo "Unsupported environment: ${{ matrix.environment }}"
              exit 1
              ;;
          esac

          echo "VAULT_ADDR=$VAULT_ADDR" >> $GITHUB_ENV
          echo "VAULT_TOKEN=$VAULT_TOKEN" >> $GITHUB_ENV

      - name: Use the environment variables for ${{ matrix.environment }} environment
        run: |
          # Access the environment-specific environment variables
          echo "Value of VAULT_ADDR: $VAULT_ADDR"
          echo "Value of VAULT_TOKEN: $VAULT_TOKEN"

      - name: Debugging
        run: |
            echo "SANDBOX_VAULT_ADDR: ${{ secrets.SANDBOX_VAULT_ADDR }}"
            echo "SANDBOX_VAULT_TOKEN: ${{ secrets.SANDBOX_VAULT_TOKEN }}"

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Get All Changed Files
        id: files
        uses: jitterbit/get-changed-files@v1

      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.5.0
        with:
          version: latest # default is latest stable

      - name: Publish secrets for ${{ matrix.environment }} environment
        timeout-minutes: 5  # Set the step-level timeout to 5 minutes
        run: |
          set -e
          for secret_file in ${{ steps.files.outputs.added_modified }}; do
            echo "Processing secret file: $secret_file"
            if [[ $secret_file =~ "secrets/${{ matrix.environment }}" ]]; then
              echo "Publishing secrets for ${{ matrix.environment }}"
              sops publish -y "${secret_file}"
            fi
          done