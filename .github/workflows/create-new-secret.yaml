name: Create New Secret

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Environment'
        required: true
        type: choice
        options:
          - production
          - staging
          - sandbox
      secret_category:
        description: 'Select Secret Category'
        required: true
        type: choice
        options:
          - customer-experience
          - infra
          - lending
      service:
        description: 'Name of the service (secret file name without extension)'
        required: true
      secret_key:
        description: 'Secret key to add or update'
        required: true
      secret_value:
        description: 'Secret value for the key'
        required: true
      sops_version:
        description: 'SOPS configuration version (v1 or v2)'
        required: true
        type: choice
        options:
          - v1
          - v2

jobs:
  modify-secret-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install sops
        run: |
          wget https://github.com/mozilla/sops/releases/download/v3.7.1/sops_3.7.1_amd64.deb
          sudo dpkg -i sops_3.7.1_amd64.deb

      - name: Handle Secret Value
        env:
          SECRET_VALUE: ${{ github.event.inputs.secret_value }}
        run: |
          chmod +x scripts/wrapper.sh
          SECRET_TEMP_FILE=$(./scripts/wrapper.sh)
          echo "SECRET_TEMP_FILE=$SECRET_TEMP_FILE" >> $GITHUB_ENV

      - name: Define Secret File Path
        run: |
          echo "SECRET_FILE_PATH=secrets/${{ github.event.inputs.environment }}/${{ github.event.inputs.secret_category }}/${{ github.event.inputs.service }}.yaml" >> $GITHUB_ENV

      - name: Check if Secret File Exists
        run: |
          if [ ! -f "${{ env.SECRET_FILE_PATH }}" ]; then
            echo "::error ::Secret file does not exist or path is incorrect."
            exit 1
          fi

      - name: Decrypt Secret File
        run: |
          sops --config configs/${{ github.event.inputs.sops_version }}_sops.yaml --decrypt ${{ env.SECRET_FILE_PATH }} > decrypted_file.yml

      - name: Update Secret File Using Temporary Secret File
        run: |
          SECRET_VALUE=$(<"$SECRET_TEMP_FILE")
          echo "${{ github.event.inputs.secret_key }}: $SECRET_VALUE" >> decrypted_file.yml

      - name: Re-Encrypt Secret File
        run: |
          sops --encrypt decrypted_file.yml > ${{ env.SECRET_FILE_PATH }}

      - name: Cleanup
        run: |
          rm -f "$SECRET_TEMP_FILE"

      # Additional steps to commit changes, if necessary
